# スターターリポジトリからコピーして各プロジェクトで使う際にコメントアウトを解除してください
# name: Test
# on:
#   pull_request:
#     types:
#       - opened
#       - synchronize
#     paths:
#       - "migrations/**"
#       - "metadata/**"
# jobs:
#   # テストの流れ
#   # 1. docker-compose で Hasura と PostgreSQL の環境を用意する
#   # 2. 上記環境に対して migration(up, down) と metadata の適用を行い、構成ファイルに問題がないことをテストする
#   test:
#     name: Test
#     runs-on: ubuntu-latest
#     env:
#       HASURA_GRAPHQL_ENDPOINT: http://127.0.0.1:8081
#     steps:
#       - uses: actions/checkout@v2

#       - uses: actions/setup-node@v1
#         with:
#           node-version: 16

#       - name: Install hasura CLI
#         # npx だと指定のバージョンを使えないので hasura-cli 側で使いたいバージョンに直接アップデートする
#         run: npx hasura-cli update-cli --version v2.0.1

#       - name: Compose up
#         run: |
#           docker-compose up -d --build
#           echo 'waiting for hasura server up...'
#           until curl -s -o /dev/null http://127.0.0.1:8081/healthz; do sleep 0.5; done

#       - name: Test metadata apply
#         run: npx hasura-cli metadata apply --skip-update-check

#       - name: Test migration up
#         run: npx hasura-cli migrate apply --database-name default --skip-update-check

#       - name: Test migration down
#         run: npx hasura-cli migrate apply --down -1 --database-name default --skip-update-check
